{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","components/Cards/Cards.jsx","Api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/ContentBox/ContentBox.jsx","components/IndiaData/IndiaData.jsx","components/Prevention/Prevention.jsx","components/HomeData/HomeData.jsx","components/CountryWise/CountryData.jsx","components/Loader/Loader.jsx","components/CountryWise/CountryWise.jsx","App.js","serviceWorker.js","index.js","images/ind.png"],"names":["Header","className","to","Component","Footer","Cards","data","confirmed","recovered","deaths","lastUpdate","activeCase","value","Date","toDateString","Card","Body","Title","end","start","duration","separator","toFixed","url","fetchData","country","a","changableUrl","axios","get","modidfiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","undefined","labels","datasets","label","borderColor","pointBackgroundColor","pointBorderColor","backgroundColor","fill","barChart","borderWidth","hoverBorderWidth","hoverBackgroundColor","hoverBorderColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchCountryAPI","Form","Group","defaultValue","onChange","e","target","controlId","Label","Control","as","custom","i","key","ContentBox","IndiaData","props","state","then","response","getData","setState","lastUpdated","catch","error","this","barThickness","alt","src","indFlag","Prevention","HomeData","fetchedData","CountryData","indivisualCountry","ourid","code","total_cases","total_active_cases","total_deaths","total_new_cases_today","total_new_deaths_today","total_recovered","total_serious_cases","colSpan","PreLoader","type","color","height","width","timeout","CountryWise","isLoading","countryitems","getCountryData","Object","values","pop","Table","responsive","striped","bordered","hover","variant","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.c8ce2037.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Header.css'\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n   \n    render() {\n        return (\n            <> \n                <div className=\"header-wrap\">\n                    <div className=\"container\">\n                        <header className=\"row header \">\n                            <div className=\"col col-lg-6 col-md-6 col-12  left\">\n                                <h1 className=\"theme-gradient \"><NavLink to='/' >Corona Dashboard</NavLink></h1> \n                            </div>\n                            <div className=\"col col-lg-6 col-md-6  col-12 right\">\n                                <ul className=\"menu\">\n                                    <li><NavLink to='/covid' >Home</NavLink></li>\n                                    <li><NavLink to='/country' >Browse By Country</NavLink></li>\n                                </ul>\n                            </div>\n                        </header>\n                    </div>\n                </div> \n            </>\n        )\n    }\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.css'\n function Footer() {\n    return (\n        <div className=\"footer-wrap\">\n            <div className=\"container text-center\">\n               <p> Copyright @ Rajesh Ranjan </p>\n            </div>\n           \n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport './Cards.css'\nimport CountUp from 'react-countup';\n\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate } }) => {\n    if(!confirmed){\n        return false\n    }\n\n    const activeCase = confirmed.value -(recovered.value+ deaths.value)\n    return(\n       <div className=\"cards-wrap\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h5 className=\"total-case\">Total Cases Reported Till : {new Date(lastUpdate).toDateString()}</h5>\n                    </div>  \n                </div>\n                <div className=\"row card-wrapper text-center\">\n                    <Card className=\"col col-lg-3 col-md-3 col-sm-12 col-12\" >\n                        <Card.Body>\n                        <Card.Title><h2>Confirmed</h2></Card.Title>\n                        <Card.Title><h3><CountUp end={confirmed.value} start={0} duration={2} separator=','/></h3></Card.Title>\n                        </Card.Body>\n                    </Card> \n                    \n                    <Card className=\"col col-lg-3 col-md-3 col-sm-12 col-12\">\n                        <Card.Body>\n                        <Card.Title><h2>Active </h2></Card.Title>\n                        <Card.Title><h3><CountUp end={activeCase} start={0} duration={2} separator=','/></h3></Card.Title>\n                        <p> {((activeCase * 100 )/confirmed.value).toFixed(2)}%</p>\n                        </Card.Body>\n                    </Card> \n\n                    <Card className=\"col col-lg-3 col-md-3 col-sm-12 col-12\">\n                        <Card.Body>\n                        <Card.Title><h2>Recovered </h2></Card.Title>\n                        <Card.Title><h3><CountUp end={recovered.value} start={0} duration={2} separator=','/></h3></Card.Title>\n                        <p>{((recovered.value * 100 )/confirmed.value).toFixed(2)}%</p>\n                        </Card.Body>\n                    </Card> \n\n                    <Card className=\"col col-lg-3 col-md-3 col-sm-12 col-12\">\n                        <Card.Body>\n                        <Card.Title><h2>Deaths</h2> </Card.Title>\n                        <Card.Title><h3><CountUp end={deaths.value} start={0} duration={2} separator=','/></h3></Card.Title>\n                        <p>{((deaths.value * 100 )/confirmed.value).toFixed(2)}%</p>\n                        </Card.Body>\n                    </Card> \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changableUrl = url ;\n    if(country){\n        changableUrl = `${url}/countries/${country}`\n    }\n    try{\n        const { data : {confirmed, recovered, deaths, lastUpdate } }  = await  axios.get(changableUrl);\n        const modidfiedData = {confirmed, recovered, deaths, lastUpdate}\n        return modidfiedData;\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const { data }  = await  axios.get(`${url}/daily`);\n        const modidfiedData = data.map(dailyData => ({\n            confirmed : dailyData.confirmed.total,\n            deaths : dailyData.deaths.total,\n            date : dailyData.reportDate\n        }));\n\n        return modidfiedData\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try{\n        const {data : {countries}} = await axios.get(`${url}/countries`)\n        return countries.map((country) => country.name);\n    }catch(error){\n        console.log(error);\n    }\n}\n","import React, { useEffect, useState } from 'react';\nimport { fetchDailyData}  from '../../Api';\nimport {Line, Bar} from 'react-chartjs-2'\nimport './Chart.css'\n \nconst Charts = ({data : {confirmed, recovered, deaths}, country}) => {\n    const [ dailyData, setDailyData ] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData( await fetchDailyData())\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length !== 0 || dailyData !== undefined\n        ? (\n        <Line \n        data = {{\n            labels : dailyData.map(({date}) => date),\n            datasets : [{\n                data :  dailyData.map(({confirmed}) => confirmed),\n                label : 'Infected People',\n                borderColor : '#rgba(76,0,255,0.99)',\n                pointBackgroundColor : 'rgba(76,0,255,0.76)',\n                pointBorderColor : 'rgba(76,0,255,0.85)',\n                backgroundColor : 'rgba(76,0,255,0.56)',\n                fill : true\n            },{\n                data :  dailyData.map(({deaths}) => deaths),\n                label : 'Total Deaths',\n                borderColor : 'red',\n                backgroundColor : 'rgba(255, 0, 0, 0.45)',\n                pointBackgroundColor : 'rgba(255, 0, 0, 0.34)',\n                pointBorderColor : 'rgba(255, 0, 0,1)',\n                fill : true\n            }]\n        }}\n        />) : null\n    )\n\n    const barChart = (\n        confirmed\n        ? (\n        <Bar \n        data = {{\n            labels : [ 'Infected ', 'Active', 'Recovered', 'Deaths'],\n            datasets :[{\n                labels : 'People',\n                backgroundColor : ['rgba(6,42,255,0.45)','rgba(6,255,255,0.45)', 'rgba(6,255,153,0.45)', 'rgba(255,6,6,0.45)'],\n                borderColor :['rgba(6,42,255,0.8)','rgba(6,255,255,0.8)',  'rgba(6,255,153,0.8)', 'rgba(255,6,6,0.8)'],\n                borderWidth :2,\n                hoverBorderWidth :3,\n                hoverBackgroundColor :['rgba(6,42,255,0.55)','rgba(6,255,255,0.55)',  'rgba(6,255,153,0.55)', 'rgba(255,6,6,0.55)'],\n                hoverBorderColor : ['rgba(6,42,255,0.85)','rgba(6,255,255,0.85)',  'rgba(6,255,153,0.85)', 'rgba(255,6,6,0.85)'],\n                data : [confirmed.value, (confirmed.value - (recovered.value +deaths.value)),recovered.value, deaths.value]\n            }] \n        }}\n        options = {{\n                legend :{display : false},\n                title :{display : true, text : `Current State In ${country}`},\n           \n        }}\n        />) : null\n    )\n\n    return(\n        <div className=\"container\">\n            <div className=\"chart-container\">\n                {country ? barChart  : lineChart}\n            </div>\n        </div>\n    )\n}\n\nexport default Charts","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport './CountryPicker.css'\nimport { fetchCountries } from '../../Api'\n \nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries ] = useState([]);\n\n    useEffect(() => {\n        const fetchCountryAPI = async () =>{\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchCountryAPI();\n    },[setFetchedCountries]);\n\n    return(\n        <div className=\"country-picker\">\n            <div className=\"container\">\n                <div className=\"row justify-content-md-center text-center\">\n                    <div className=\"col-md-4 \">\n                        <Form className=\"\">\n                            <Form.Group  defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)} controlId=\"exampleForm.SelectCustom\">\n                                <Form.Label>Select Your Country</Form.Label>\n                                <Form.Control as=\"select\"  custom>\n                                <option value=\"\">Global</option>\n                                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CountryPicker","import React from 'react'\nimport './ContentBox.css'\nfunction ContentBox() {\n    return (\n        <div className=\"content-wrap\">\n            <div className=\"container \">\n                <div className=\"row\">\n                    <div className=\"col col-lg-4 col-md-4 col-sm-12 col-12 content\">\n                        <h4><span>#.</span>Practice respiratory hygiene</h4>\n                        <p>\n                        Make sure you, and the people around you, follow good respiratory hygiene. This means covering your mouth and nose with your bent elbow or tissue when you cough or sneeze. \n                        Then dispose of the used tissue immediately.\n                        </p>\n                    </div>\n                    <div className=\"col col-lg-4 col-md-4 col-sm-12 col-12 content\">\n                    <h4> <span>#.</span>If you have fever, cough and difficulty breathing</h4>\n                        <p>Stay home if you feel unwell. If you have a fever, cough and difficulty breathing, seek medical attention and call in advance. \n                            Follow the directions of your local health authority.</p>\n                    </div>\n                    <div className=\"col col-lg-4 col-md-4 col-sm-12 col-12 content\">\n                        <h4> <span>#.</span>Please don't walk unneccesary</h4>\n                        <p><strong> Why? </strong>  It is irresponsible behaviour as a citizen of India. Against Corono virus a large number of Doctors, Police, Delivery boys, Soldiers are giving their efforts. Hence request to you please do not go out side of your home. #StayHomeStaySafe</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ContentBox","import React, { Component } from 'react'\nimport './IndiaData.css'\nimport axios from 'axios'\nimport CountUp from 'react-countup';\nimport indFlag from '../../images/ind.png';\nimport { HorizontalBar} from 'react-chartjs-2'\n\n\nclass IndiaData extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            confirmed : 0,\n            recovered : 0,\n            deaths : 0,\n            lastUpdate : 0\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://covid19.mathdro.id/api/countries/india')\n        .then(response => {\n            const getData = response.data\n            this.setState({\n                confirmed : getData.confirmed.value,\n                recovered : getData.recovered.value,\n                deaths : getData.deaths.value,\n                lastUpdated : getData.lastUpdate\n            }) \n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n\n    render() {\n        const {confirmed, deaths, recovered} = this.state;\n        const activeCase = confirmed -(recovered+ deaths)\n\n        const barChart = (\n            confirmed\n            ? (\n            <HorizontalBar \n            data = {{\n                labels : [ 'Infected ', 'Active', 'Recovered', 'Deaths'],\n                datasets :[{\n                    labels : 'People',\n                    backgroundColor : ['rgba(6,42,255,0.45)','rgba(6,255,255,0.45)', 'rgba(6,255,153,0.45)', 'rgba(255,6,6,0.45)'],\n                    borderColor :['rgba(6,42,255,0.8)','rgba(6,255,255,0.8)',  'rgba(6,255,153,0.8)', 'rgba(255,6,6,0.8)'],\n                    borderWidth :2,\n                    barThickness :28,\n                    hoverBorderWidth :3,\n                    hoverBackgroundColor :['rgba(6,42,255,0.55)','rgba(6,255,255,0.55)',  'rgba(6,255,153,0.55)', 'rgba(255,6,6,0.55)'],\n                    hoverBorderColor : ['rgba(6,42,255,0.85)','rgba(6,255,255,0.85)',  'rgba(6,255,153,0.85)', 'rgba(255,6,6,0.85)'],\n                    data : [confirmed, (confirmed - (recovered + deaths)),recovered, deaths]\n                }] \n            }}\n            options = {{\n                    legend :{display : false},\n                    title :{display : true, text : `Current State In India`},\n                }}\n            />) : null\n        )\n\n        return (\n            <div> \n                 <div className=\"india-fig-wrap\">\n                    <div className=\"container\">\n                        <div className=\"row justify-content-md-center text-center\">\n                            <div className=\"col-lg-4 india-fig-left \">\n                                 <div><img alt=\"India Flag\" src={indFlag} className=\"indFlag\" /></div>\n                                 <div> <h3 className=\"text-left\"> Corona Live Status In <span className=\"india\">India</span></h3></div>\n                            </div> \n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col col-lg-6 col-md-6 col-sm-12 col-12 india-fig-right text-center\">\n                                <div className=\"india-figure\">\n                                    <div className=\"grid2\">\n                                        <h4>Confirmed </h4>\n                                        <CountUp end={confirmed} start={0} duration={2} separator=','/> \n                                        </div> \n                                    <div className=\"grid3\"><h4>Active  </h4> <CountUp end={confirmed - (recovered + deaths)} start={0} duration={2} separator=','/>({((activeCase * 100 )/confirmed).toFixed(2)}%)</div>\n                                    <div className=\"grid4\"><h4>Recovered </h4> <CountUp end={recovered} start={0} duration={2} separator=','/> ({((recovered * 100 )/confirmed).toFixed(2)}%)</div>\n                                    <div className=\"grid5\"><h4>Deaths  </h4>  <CountUp end={deaths} start={0} duration={2} separator=','/>({((deaths * 100 )/confirmed).toFixed(2)}%)</div> \n                                </div>\n                            </div>\n                            <div className=\"col col-lg-6 col-md-6 col-sm-12 col-12\">\n                                <div className=\"chart-wpr\">\n                                    {barChart}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default IndiaData","import React from 'react'\nimport './Prevention.css'\n\nfunction Prevention() {\n    return (\n        <div className=\"prevention\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2 className=\"advice theme-gradient\">Corona Virus Advice for the public .</h2>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col col-lg-4 col-md-4 col-sm-12 col-12 content\">\n                        <h4><span>#.</span>Wash your hands frequently</h4>\n                        <p>\n                            Regularly and thoroughly clean your hands with an alcohol-based hand rub or wash them with soap and water.\n                            <strong> Why? </strong> Washing your hands with soap and water or using alcohol-based hand rub kills viruses that may be on your hands.\n                        </p>\n                    </div>\n                    <div className=\"col col-lg-4 col-md-4 col-sm-12 col-12 content\">\n                    <h4> <span>#.</span>Maintain social distancing</h4>\n                        <p>Maintain at least 1 metre (3 feet) distance between yourself and anyone who is coughing or sneezing.\n                        <strong> Why? </strong>  When someone coughs or sneezes they spray small liquid droplets from their nose or mouth which may contain virus.</p>\n                    </div>\n                    <div className=\"col col-lg-4 col-md-4 col-sm-12 col-12 content\">\n                        <h4> <span>#.</span>Avoid touching eyes, nose and mouth</h4>\n                        <p><strong> Why? </strong>  Hands touch many surfaces and can pick up viruses. Once contaminated, hands can transfer the virus to your eyes, nose or mouth. From there, the virus can enter your body and can make you sick.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Prevention\n","import React, { Component } from 'react'\nimport {Cards, Chart, CountryPicker, ContentBox, IndiaData, Prevention} from '../../components'\nimport {fetchData} from '../../Api'\n\nclass HomeData extends Component{\n    state = {\n        data : {},\n        country : ''\n    }\n    \n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        this.setState({\n            data : fetchedData\n        })\n    }\n    \n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({\n            data : fetchedData,\n            country : country\n        })\n    }\n\n    render(){\n        const { data , country} = this.state;\n        return(\n            <div>\n                <IndiaData/>\n                <Prevention />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Cards data={data}/>\n                <Chart data={data} country={country}/>\n                <ContentBox/>\n            </div>\n        )\n    }\n}\n\n\nexport default HomeData\n","import React from 'react'\nimport './CountryWise.css'\n\nfunction CountryData (indivisualCountry) {\n    const {ourid,title, code, total_cases, total_active_cases, total_deaths, \n        total_new_cases_today, total_new_deaths_today,total_recovered, total_serious_cases} = indivisualCountry.country\n    return (\n        <tr>\n            <td>{ourid}</td>\n            <td> {code === 'DP' ? null : <img className=\"country-image\" alt={title} src={`https://www.countryflags.io/${code}/flat/${16}.png`} />}  {title} </td>\n            {total_cases > 0 ? \n            <>\n            <td className=\"skyblue text-center\">{total_cases}</td>\n            <td className=\"yellow text-center\">{total_active_cases}</td>\n            <td className=\"green text-center\">{total_recovered}</td>\n            <td className=\"red text-center\">{total_deaths}</td>\n            <td>{total_new_cases_today}</td>\n            <td>{total_new_deaths_today}</td>\n            <td>{total_serious_cases}</td>\n            </> : <td colSpan=\"7\" className=\"text-center bg-success\"> Corona Free Country</td> }\n            \n        </tr>\n    )\n}\n\n\nexport default CountryData","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport './Loader.css'\n\nfunction PreLoader() {\n    return (\n        <>\n            <div className=\"loader-back\">\n                <Loader\n                    type=\"Bars\"\n                    color=\"#f81f01\"\n                    height={80}\n                    width={80}\n                    timeout={6000} //3 secs\n                />\n            </div>\n        </>\n    )\n}\n\nexport default PreLoader\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table'\nimport './CountryWise.css'\nimport CountryData from './CountryData'\nimport PreLoader from '../Loader/Loader'\n\nconst apiUrl = 'https://api.thevirustracker.com/free-api?countryTotals=ALL/'\n\nclass CountryWise extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             countries : [{}],\n             isLoading : false\n        }  \n    }\n    \n    componentDidMount(){\n        axios.get(apiUrl)\n        .then(response =>{\n            this.setState({\n                countries : response.data.countryitems[0],\n                isLoading : true\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        const {countries} = this.state;\n        const getCountryData = Object.values(countries)\n        getCountryData.pop()\n        return (\n            <>\n            {this.state.isLoading \n            ? (<div className=\"table-wrap\">\n                    <div className=\"container\">\n                        <Table responsive striped bordered hover variant=\"dark\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Country </th>\n                                    <th className=\"text-center skyblue\">Total</th>\n                                    <th className=\"text-center yellow\">Active</th>\n                                    <th className=\"text-center green\">Recoverd</th>\n                                    <th className=\"text-center red\">Deaths</th>\n                                    <th >New Case</th>\n                                    <th>Today Death</th>\n                                    <th>Serious Case</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {getCountryData.map((country,i) =>  \n                                <CountryData key={i} country={country} />)}\n                            </tbody>\n                        </Table>\n                    </div>\n                </div>)\n            : <PreLoader/> }\n            </>  \n        )\n    }\n}\n\nexport default CountryWise\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer';\nimport HomeData from './components/HomeData/HomeData';\nimport CountryWise from './components/CountryWise/CountryWise'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\n\nclass App extends Component{\n    render(){\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={HomeData} />\n              <Route path=\"/country\" component={CountryWise} />\n            </Switch>\n            <Footer/>\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ind.b64e96da.png\";"],"sourceRoot":""}